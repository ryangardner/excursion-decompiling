package com.google.android.gms.common.api.internal;

import com.google.android.gms.common.api.PendingResult;
import com.google.android.gms.common.api.Result;
import com.google.android.gms.common.api.ResultCallback;
import com.google.android.gms.common.api.ResultTransform;
import com.google.android.gms.common.api.Status;
import com.google.android.gms.common.api.TransformedResult;
import com.google.android.gms.common.internal.Preconditions;
import java.util.concurrent.TimeUnit;

public final class zabz<R extends Result> extends PendingResult<R> {
   private final Status zaa;

   public zabz(Status var1) {
      Preconditions.checkNotNull(var1, "Status must not be null");
      Preconditions.checkArgument(var1.isSuccess() ^ true, "Status must not be success");
      this.zaa = var1;
   }

   public final void addStatusListener(PendingResult.StatusListener var1) {
      throw new UnsupportedOperationException("Operation not supported on PendingResults generated by ResultTransform.createFailedResult()");
   }

   public final R await() {
      throw new UnsupportedOperationException("Operation not supported on PendingResults generated by ResultTransform.createFailedResult()");
   }

   public final R await(long var1, TimeUnit var3) {
      throw new UnsupportedOperationException("Operation not supported on PendingResults generated by ResultTransform.createFailedResult()");
   }

   public final void cancel() {
      throw new UnsupportedOperationException("Operation not supported on PendingResults generated by ResultTransform.createFailedResult()");
   }

   public final boolean isCanceled() {
      throw new UnsupportedOperationException("Operation not supported on PendingResults generated by ResultTransform.createFailedResult()");
   }

   public final void setResultCallback(ResultCallback<? super R> var1) {
      throw new UnsupportedOperationException("Operation not supported on PendingResults generated by ResultTransform.createFailedResult()");
   }

   public final void setResultCallback(ResultCallback<? super R> var1, long var2, TimeUnit var4) {
      throw new UnsupportedOperationException("Operation not supported on PendingResults generated by ResultTransform.createFailedResult()");
   }

   public final <S extends Result> TransformedResult<S> then(ResultTransform<? super R, ? extends S> var1) {
      throw new UnsupportedOperationException("Operation not supported on PendingResults generated by ResultTransform.createFailedResult()");
   }

   final Status zaa() {
      return this.zaa;
   }
}
